package com.myway.myway.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlaceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlaceAllPropertiesEquals(Place expected, Place actual) {
        assertPlaceAutoGeneratedPropertiesEquals(expected, actual);
        assertPlaceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlaceAllUpdatablePropertiesEquals(Place expected, Place actual) {
        assertPlaceUpdatableFieldsEquals(expected, actual);
        assertPlaceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlaceAutoGeneratedPropertiesEquals(Place expected, Place actual) {
        assertThat(expected)
            .as("Verify Place auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlaceUpdatableFieldsEquals(Place expected, Place actual) {
        assertThat(expected)
            .as("Verify Place relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDisplayName()).as("check displayName").isEqualTo(actual.getDisplayName()))
            .satisfies(e -> assertThat(e.getLat()).as("check lat").isEqualTo(actual.getLat()))
            .satisfies(e -> assertThat(e.getLon()).as("check lon").isEqualTo(actual.getLon()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlaceUpdatableRelationshipsEquals(Place expected, Place actual) {
        assertThat(expected)
            .as("Verify Place relationships")
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getItinary()).as("check itinary").isEqualTo(actual.getItinary()));
    }
}
