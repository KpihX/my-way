package com.kpihx_labs.myway.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LocationCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocationCategoryAllPropertiesEquals(LocationCategory expected, LocationCategory actual) {
        assertLocationCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertLocationCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocationCategoryAllUpdatablePropertiesEquals(LocationCategory expected, LocationCategory actual) {
        assertLocationCategoryUpdatableFieldsEquals(expected, actual);
        assertLocationCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocationCategoryAutoGeneratedPropertiesEquals(LocationCategory expected, LocationCategory actual) {
        assertThat(expected)
            .as("Verify LocationCategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocationCategoryUpdatableFieldsEquals(LocationCategory expected, LocationCategory actual) {
        assertThat(expected)
            .as("Verify LocationCategory relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocationCategoryUpdatableRelationshipsEquals(LocationCategory expected, LocationCategory actual) {}
}
