package com.kpihx_labs.myway.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ItinaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItinaryAllPropertiesEquals(Itinary expected, Itinary actual) {
        assertItinaryAutoGeneratedPropertiesEquals(expected, actual);
        assertItinaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItinaryAllUpdatablePropertiesEquals(Itinary expected, Itinary actual) {
        assertItinaryUpdatableFieldsEquals(expected, actual);
        assertItinaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItinaryAutoGeneratedPropertiesEquals(Itinary expected, Itinary actual) {
        assertThat(expected)
            .as("Verify Itinary auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItinaryUpdatableFieldsEquals(Itinary expected, Itinary actual) {
        assertThat(expected)
            .as("Verify Itinary relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDistance()).as("check distance").isEqualTo(actual.getDistance()))
            .satisfies(e -> assertThat(e.getDuration()).as("check duration").isEqualTo(actual.getDuration()))
            .satisfies(e -> assertThat(e.getPolyline()).as("check polyline").isEqualTo(actual.getPolyline()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertItinaryUpdatableRelationshipsEquals(Itinary expected, Itinary actual) {
        assertThat(expected)
            .as("Verify Itinary relationships")
            .satisfies(e -> assertThat(e.getLocations()).as("check locations").isEqualTo(actual.getLocations()));
    }
}
